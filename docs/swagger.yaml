definitions:
  accounts.Me.ok:
    properties:
      account:
        $ref: '#/definitions/views.AccountView'
    type: object
  auth.SignIn.request:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.SignUp.accountExists:
    properties:
      email:
        type: string
    type: object
  auth.SignUp.ok:
    properties:
      account:
        $ref: '#/definitions/views.AccountView'
    type: object
  auth.SignUp.request:
    properties:
      display_name:
        maxLength: 256
        minLength: 1
        type: string
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.Touch.ok:
    properties:
      principal:
        $ref: '#/definitions/views.PrincipalView'
    type: object
  healthcheck.Healthcheck.view:
    properties:
      app_build:
        type: string
      app_name:
        type: string
      app_stage:
        type: string
    type: object
  views.AccountView:
    properties:
      created_at:
        type: integer
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      touched_at:
        type: integer
      updated_at:
        type: integer
    type: object
  views.ErrorView-auth_SignUp_accountExists:
    properties:
      msg:
        type: string
      payload:
        $ref: '#/definitions/auth.SignUp.accountExists'
      type:
        type: string
    required:
    - type
    type: object
  views.PrincipalView:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts/me:
    get:
      consumes:
      - application/json
      description: Gets the account of the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accounts.Me.ok'
      security:
      - AccountPrincipal: []
      summary: Get my account
      tags:
      - Accounts
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Signs in to an account using email and password.
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.SignIn.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignUp.ok'
        "401":
          description: Unauthorized
      summary: Sign in (login)
      tags:
      - Authentication
  /auth/sign-out:
    delete:
      consumes:
      - application/json
      description: Signs out from the account session.
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - Principal: []
      summary: Sign out (logout)
      tags:
      - Authentication
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Registers a new account.
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.SignUp.request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.SignUp.ok'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.ErrorView-auth_SignUp_accountExists'
      summary: Sign up (register)
      tags:
      - Authentication
  /auth/touch:
    post:
      consumes:
      - application/json
      description: Touches the session and renews tokens.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.Touch.ok'
      security:
      - Principal: []
      summary: Touch
      tags:
      - Authentication
  /healthcheck:
    get:
      consumes:
      - application/json
      description: Checks if the application is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Healthcheck.view'
      summary: Healthcheck
      tags:
      - Utility
  /ping:
    get:
      consumes:
      - application/json
      description: Ping
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping
      tags:
      - Utility
swagger: "2.0"
